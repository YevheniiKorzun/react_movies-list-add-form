{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","linkValidationRegEx","NewMovie","state","invalidInputs","touchedInputs","inputTextHandler","event","target","value","name","setState","prevState","inputValidation","length","includes","test","filter","item","addTouchedInputs","submitButtonStatus","onSubmitHandler","preventDefault","props","addMovie","this","onSubmit","cn","warning","type","onFocus","onChange","onBlur","required","id","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8bb37cc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\nimport cn from 'classnames';\n\nconst linkValidationRegEx = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  invalidInputs: string[],\n  touchedInputs: string[],\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    invalidInputs: [],\n    touchedInputs: [],\n  };\n\n  inputTextHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value, name } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  inputValidation = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (\n      value.length === 0\n      || (name.includes('Url') && !linkValidationRegEx.test(value))\n    ) {\n      this.setState(prevState => ({\n        invalidInputs: prevState.invalidInputs.includes(name)\n          ? prevState.invalidInputs\n          : [...prevState.invalidInputs, name],\n      }));\n    } else {\n      this.setState(prevState => ({\n        invalidInputs: prevState.invalidInputs.filter(item => item !== name),\n      }));\n    }\n  };\n\n  addTouchedInputs = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n\n    if (!this.state.touchedInputs.includes(name)) {\n      this.setState(prevState => ({\n        touchedInputs: [...prevState.touchedInputs, name],\n      }));\n    }\n  };\n\n  submitButtonStatus = () => {\n    const { invalidInputs, touchedInputs } = this.state;\n\n    return !(!invalidInputs.length && touchedInputs.length === 4);\n  };\n\n  onSubmitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.props.addMovie(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      invalidInputs: [],\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      invalidInputs,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmitHandler}>\n        <p>Title</p>\n        <input\n          className={cn({ warning: invalidInputs.includes('title') })}\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onFocus={this.addTouchedInputs}\n          onChange={this.inputTextHandler}\n          onBlur={this.inputValidation}\n        />\n        {invalidInputs.includes('title') && (\n          <span>Enter a title!</span>\n        )}\n        <p>imgUrl</p>\n        <input\n          className={cn({ warning: invalidInputs.includes('imgUrl') })}\n          type=\"text\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onFocus={this.addTouchedInputs}\n          onChange={this.inputTextHandler}\n          onBlur={this.inputValidation}\n        />\n        {(invalidInputs.includes('imgUrl')) && (\n          <span>Invalid url!</span>\n        )}\n        <p>imdbUrl</p>\n        <input\n          className={cn({ warning: invalidInputs.includes('imdbUrl') })}\n          type=\"text\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onFocus={this.addTouchedInputs}\n          onChange={this.inputTextHandler}\n          onBlur={this.inputValidation}\n        />\n        {invalidInputs.includes('imdbUrl') && (\n          <span>Invalid url!</span>\n        )}\n        <p>imdbId</p>\n        <input\n          className={cn({ warning: invalidInputs.includes('imdbId') })}\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          onFocus={this.addTouchedInputs}\n          onChange={this.inputTextHandler}\n          onBlur={this.inputValidation}\n          required\n        />\n        {invalidInputs.includes('imdbId') && (\n          <span>Enter an imdbId!</span>\n        )}\n        <p>Description</p>\n        <textarea\n          className=\"description\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={this.inputTextHandler}\n        />\n        <div>\n          <button\n            disabled={this.submitButtonStatus()}\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
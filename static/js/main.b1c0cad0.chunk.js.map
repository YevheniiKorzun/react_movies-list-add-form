{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","imgLinkValidationRegEx","linkValidationRegEx","NewMovie","state","activeInputs","isUrlValid","isImgUrlValid","changeTitleHandler","event","value","target","setState","changeDescriptionHandler","String","changeimgUrlHandler","test","changeimdbUrlHandler","selectInputHandler","name","includes","prevState","changeimdbIdHandler","imgUrlOnBlur","urlOnBlur","onSubmitHandler","preventDefault","props","addMovie","this","onSubmit","cn","warning","type","onFocus","onChange","length","id","onBlur","required","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"oyEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,wBCPtBC,EAAyB,yLACzBC,EAAsB,qKAiBfC,EAAb,4MACEC,MAAe,CACbhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,GACRK,aAAc,GACdC,YAAY,EACZC,eAAe,GATnB,EAYEC,mBAAqB,SAACC,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CACZxB,MAAOsB,KAhBb,EAoBEG,yBAA2B,SAACJ,GAC1B,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CACZvB,YAAayB,OAAOJ,MAxB1B,EA4BEK,oBAAsB,SAACN,GACrB,IAAQC,EAAUD,EAAME,OAAhBD,MAEJT,EAAuBe,KAAKN,GAC9B,EAAKE,SAAS,CACZL,eAAe,IAGjB,EAAKK,SAAS,CACZL,eAAe,IAInB,EAAKK,SAAS,CACZtB,OAAQoB,KA1Cd,EA8CEO,qBAAuB,SAACR,GACtB,IAAQC,EAAUD,EAAME,OAAhBD,MAEJR,EAAoBc,KAAKN,GAC3B,EAAKE,SAAS,CACZN,YAAY,IAGd,EAAKM,SAAS,CACZN,YAAY,IAIhB,EAAKM,SAAS,CACZrB,QAASmB,KA5Df,EAgEEQ,mBAAqB,SAACT,GACpB,MAAwBA,EAAME,OAAtBQ,EAAR,EAAQA,KAAMT,EAAd,EAAcA,MACNL,EAAiB,EAAKD,MAAtBC,aAEM,WAATc,GAAuBlB,EAAuBe,KAAKN,IACtD,EAAKE,SAAS,CAAEL,eAAe,IAGnB,YAATY,GAAwBjB,EAAoBc,KAAKN,IACpD,EAAKE,SAAS,CAAEN,YAAY,IAGzBD,EAAae,SAASD,IACzB,EAAKP,UAAS,SAAAS,GAAS,MAAK,CAC1BhB,aAAa,GAAD,mBAAMgB,EAAUhB,cAAhB,CAA8Bc,SA9ElD,EAmFEG,oBAAsB,SAACb,GACrB,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CACZZ,OAAQU,KAvFd,EA2FEa,aAAe,WACR,EAAKnB,MAAMG,eACd,EAAKK,SAAS,CACZtB,OAAQ,MA9FhB,EAmGEkC,UAAY,WACL,EAAKpB,MAAME,YACd,EAAKM,SAAS,CACZrB,QAAS,MAtGjB,EA2GEkC,gBAAkB,SAAChB,GACjBA,EAAMiB,iBAEN,EAAKC,MAAMC,SAAS,EAAKxB,OAEzB,EAAKQ,SAAS,CACZxB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,GACRK,aAAc,GACdC,YAAY,EACZC,eAAe,KAxHrB,4CA4HE,WACE,MASIsB,KAAKzB,MARPhB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OACAK,EANF,EAMEA,aACAC,EAPF,EAOEA,WACAC,EARF,EAQEA,cAGF,OACE,uBAAMuB,SAAUD,KAAKJ,gBAArB,UACE,sCACA,uBACEjC,UAAWuC,IAAG,CAAEC,SAAU5C,GAASiB,EAAae,SAAS,WACzDa,KAAK,OACLd,KAAK,QACLT,MAAOtB,EACP8C,QAASL,KAAKX,mBACdiB,SAAUN,KAAKrB,qBAEE,IAAjBpB,EAAMgD,QAAgB/B,EAAae,SAAS,UAC5C,kDAEF,4CACA,0BACE5B,UAAU,cACV2B,KAAK,cACLkB,GAAG,cACH3B,MAAOrB,EACP8C,SAAUN,KAAKhB,2BAEjB,uCACA,uBACErB,UAAWuC,IAAG,CAAEC,SAAUzB,GAAiBF,EAAae,SAAS,YACjEa,KAAK,OACLd,KAAK,SACLT,MAAOpB,EACP4C,QAASL,KAAKX,mBACdiB,SAAUN,KAAKd,oBACfuB,OAAQT,KAAKN,gBAEZhB,GAAiBF,EAAae,SAAS,WACxC,gDAEF,wCACA,uBACE5B,UAAWuC,IAAG,CAAEC,SAAU1B,GAAcD,EAAae,SAAS,aAC9Da,KAAK,OACLd,KAAK,UACLT,MAAOnB,EACP2C,QAASL,KAAKX,mBACdiB,SAAUN,KAAKZ,qBACfqB,OAAQT,KAAKL,aAEZlB,GAAcD,EAAae,SAAS,YACrC,gDAEF,uCACA,uBACE5B,UAAWuC,IAAG,CAAEC,SAAUhC,GAAUK,EAAae,SAAS,YAC1Da,KAAK,OACLd,KAAK,SACLT,MAAOV,EACPkC,QAASL,KAAKX,mBACdiB,SAAUN,KAAKP,oBACfiB,UAAQ,KAEPvC,GAAUK,EAAae,SAAS,WACjC,oDAEF,8BACE,wBACEoB,WAAYjC,GAAiBD,GAAclB,EAAMgD,QAAUpC,EAAOoC,QAClEH,KAAK,SAFP,gCAtMV,GAA8BQ,a,QCbjBC,EAAb,4MACEtC,MAAe,CACbP,OAAQ8C,GAFZ,EAKEf,SAAW,SAAC7B,GACV,EAAKa,UAAS,SAAAS,GAAS,MAAK,CAC1BxB,OAAO,GAAD,mBAAMwB,EAAUxB,QAAhB,CAAwBE,SAPpC,4CAWE,WAAU,IAAD,OACCF,EAAWgC,KAAKzB,MAAhBP,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUoC,SAAU,SAAC7B,GAAD,OAAkB,EAAK6B,SAAS7B,eApB9D,GAAyB6C,IAAMH,WCN/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b1c0cad0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\nimport cn from 'classnames';\n\nconst imgLinkValidationRegEx = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)(\\.jpg|\\.jpeg|\\.png)$/;\nconst linkValidationRegEx = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  activeInputs: string[],\n  isUrlValid: boolean,\n  isImgUrlValid: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    activeInputs: [],\n    isUrlValid: true,\n    isImgUrlValid: true,\n  };\n\n  changeTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  };\n\n  changeDescriptionHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      description: String(value),\n    });\n  };\n\n  changeimgUrlHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (imgLinkValidationRegEx.test(value)) {\n      this.setState({\n        isImgUrlValid: true,\n      });\n    } else {\n      this.setState({\n        isImgUrlValid: false,\n      });\n    }\n\n    this.setState({\n      imgUrl: value,\n    });\n  };\n\n  changeimdbUrlHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (linkValidationRegEx.test(value)) {\n      this.setState({\n        isUrlValid: true,\n      });\n    } else {\n      this.setState({\n        isUrlValid: false,\n      });\n    }\n\n    this.setState({\n      imdbUrl: value,\n    });\n  };\n\n  selectInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const { activeInputs } = this.state;\n\n    if ((name === 'imgUrl') && !imgLinkValidationRegEx.test(value)) {\n      this.setState({ isImgUrlValid: false });\n    }\n\n    if ((name === 'imdbUrl') && !linkValidationRegEx.test(value)) {\n      this.setState({ isUrlValid: false });\n    }\n\n    if (!activeInputs.includes(name)) {\n      this.setState(prevState => ({\n        activeInputs: [...prevState.activeInputs, name],\n      }));\n    }\n  };\n\n  changeimdbIdHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      imdbId: value,\n    });\n  };\n\n  imgUrlOnBlur = () => {\n    if (!this.state.isImgUrlValid) {\n      this.setState({\n        imgUrl: '',\n      });\n    }\n  };\n\n  urlOnBlur = () => {\n    if (!this.state.isUrlValid) {\n      this.setState({\n        imdbUrl: '',\n      });\n    }\n  };\n\n  onSubmitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.props.addMovie(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      activeInputs: [],\n      isUrlValid: true,\n      isImgUrlValid: true,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      activeInputs,\n      isUrlValid,\n      isImgUrlValid,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmitHandler}>\n        <p>Title</p>\n        <input\n          className={cn({ warning: !title && activeInputs.includes('title') })}\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onFocus={this.selectInputHandler}\n          onChange={this.changeTitleHandler}\n        />\n        {(title.length === 0 && activeInputs.includes('title')) && (\n          <span>Enter a title!</span>\n        )}\n        <p>Description</p>\n        <textarea\n          className=\"description\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={this.changeDescriptionHandler}\n        />\n        <p>imgUrl</p>\n        <input\n          className={cn({ warning: !isImgUrlValid && activeInputs.includes('imgUrl') })}\n          type=\"text\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onFocus={this.selectInputHandler}\n          onChange={this.changeimgUrlHandler}\n          onBlur={this.imgUrlOnBlur}\n        />\n        {(!isImgUrlValid && activeInputs.includes('imgUrl')) && (\n          <span>Invalid url!</span>\n        )}\n        <p>imdbUrl</p>\n        <input\n          className={cn({ warning: !isUrlValid && activeInputs.includes('imdbUrl') })}\n          type=\"text\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onFocus={this.selectInputHandler}\n          onChange={this.changeimdbUrlHandler}\n          onBlur={this.urlOnBlur}\n        />\n        {(!isUrlValid && activeInputs.includes('imdbUrl')) && (\n          <span>Invalid url!</span>\n        )}\n        <p>imdbId</p>\n        <input\n          className={cn({ warning: !imdbId && activeInputs.includes('imdbId') })}\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          onFocus={this.selectInputHandler}\n          onChange={this.changeimdbIdHandler}\n          required\n        />\n        {(!imdbId && activeInputs.includes('imdbId')) && (\n          <span>Enter an imdbId!</span>\n        )}\n        <div>\n          <button\n            disabled={!(isImgUrlValid && isUrlValid && title.length && imdbId.length)}\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={(movie: Movie) => this.addMovie(movie)} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}